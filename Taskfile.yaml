version: "3"

dotenv:
  - ".env"
  - ".env.production.local"
  - ".env.staging.local"
  - ".env.development.local"

interval: 500ms

includes:
  ecom:
    taskfile: ./packages/ecom/Taskfile.yaml
  cms:
    taskfile: ./packages/cms/Taskfile.yaml
  storefront:
    taskfile: ./apps/storefront/Taskfile.yaml
  tinacms:
    taskfile: ./apps/tinacms/Taskfile.yaml
  ops:
    taskfile: ./ops/Taskfile.yaml
    dir: ./ops
  dashboard:
    taskfile: ./apps/dashboard/Taskfile.yaml
    dir: ./apps/dashboard

tasks:
  install-deno-task:
    run: always
    dir: ./ops
    cmds:
      - deno task install-self

  install:
    aliases:
      - "i"
    deps:
      - install-deno-task
    cmds:
      - bun install
      - task generate-dev-env -f

  generate-dev-env:
    deps: [install-deno-task]
    cmds:
      - t generate environment -t development

  generate:
    deps: [ecom:generate, cms:generate]

  watch:
    watch: true
    deps: [generate]

  build:
    preconditions:
      - bun version
    requires:
      vars:
        - "SHOP_NAME"
        - "ROOT_DOMAIN"
        - "NODE_ENV"
    env:
      SHOP_NAME: "{{.SHOP_NAME}}"
      ROOT_DOMAIN: "{{.ROOT_DOMAIN}}"
      NODE_ENV: "{{.NODE_ENV}}"
    deps: [install]
    cmds:
      - t generate environment -t production
      - source .env.local
      - bun install
      - task ecom:generate -f
      - task tinacms:build -f
      - task cms:generate -f
      - task storefront:build -f
      - rm -rf ./fast-build/dist/
      - rm -rf ./fast-build/dist.tgz

      - mkdir -p ./fast-build/dist/storefront
      - cp -R apps/storefront/.next ./fast-build/dist/storefront
      - cp -R apps/tinacms/public ./fast-build/dist/storefront
      - cp -R apps/storefront/package.json ./fast-build/dist/storefront

      - mkdir -p ./fast-build/dist/tinacms
      - cp -R apps/tinacms/.next ./fast-build/dist/tinacms
      - cp -R apps/tinacms/public ./fast-build/dist/tinacms
      - cp -R apps/tinacms/content ./fast-build/dist/tinacms
      - cp -R apps/tinacms/package.json ./fast-build/dist/tinacms

      - rm -rf node_modules
      - bun install --production
      - mv node_modules ./fast-build/dist/node_modules

      - cd ./fast-build && tar czf ./dist.tgz ./dist && cd ..
      - rm -rf ./fast-build/dist

      - cd ..
      - rm -rf node_modules

  dev:
    deps: [storefront:dev, tinacms:dev]

  storefront-dev:prod:
    deps: [dev:generate-almost-prod-like-env, storefront:dev:prod]

  tinacms-dev:prod:
    deps: [dev:generate-almost-prod-like-env, tinacms:dev:prod]

  dev:prod:
    deps: [storefront-dev:prod, tinacms-dev:prod]

  render:
    cmds:
      - rm -rf .env
      - task dev:generate-prod-env -f
      - source .env
      - task ops:render -f

  deploy:
    requires:
      vars:
        - "SHOP_NAME_OVERRIDE"
    env:
      SHOP_NAME_OVERRIDE: "{{.SHOP_NAME_OVERRIDE}}"
      ROOT_NAME_OVERRIDE: "beta.w3yz.dev"
    cmds:
      - rm -rf .env
      - task dev:generate-prod-env -f
      - source .env
      - task ops:deploy -f
